version: '3.2'

# Before you bring up this stack, ensure you've built the application first, using
# ./gradlew clean shadowjar jpi

services:
  clerk:
    build:
      context: ./backend/server
    image: outofcoffee/clerk
    container_name: clerk
    ports:
    - "9090:9090"
    volumes:
    - "./backend/parser/src/test/resources:/opt/clerk/rules"
    environment:
    - RULES_FILE=/opt/clerk/rules/full.kts
    - JENKINS_BASE_URL=http://jenkins:8080

    # Jenkins credentials
    - JENKINS_USERNAME=admin
    - JENKINS_PASSWORD=admin

    # Slack token with 'chat.post' permission
    - SLACK_USER_TOKEN

    # Use the MongoDB store
    - STORE_IMPL=mongo
    - MONGO_HOST=mongo
    - MONGO_PORT=27017

    # Bitbucket
    - BITBUCKET_REPO_USERNAME
    - BITBUCKET_PASSWORD
    - BITBUCKET_REPO_SLUG

    # If it differs from the repo username, override here
    - BITBUCKET_AUTH_USERNAME

    # Git repository
    - GIT_REPO_REMOTE_URL=https://github.com/release-tools/build-clerk.git

  mongo:
    image: mongo:3.6
    container_name: mongo
    volumes:
    - "mongo_data:/data/db"

  jenkins:
    build:
      context: .
      dockerfile: ./docs/examples/jenkins/Dockerfile
    image: outofcoffee/clerk-jenkins
    container_name: jenkins
    ports:
    - "8080:8080"
    volumes:
    - "jenkins_home:/var/jenkins_home"

#  If you'd like a local web UI for MongoDB
#  mongo-express:
#    image: mongo-express
#    restart: always
#    ports:
#    - 8081:8081

volumes:
  jenkins_home:
  mongo_data:
