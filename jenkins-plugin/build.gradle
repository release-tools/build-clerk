plugins {
    id 'org.jenkins-ci.jpi' version '0.48.0'
}

apply plugin: 'java'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
}

group = 'io.gatehill.buildclerk.jenkins'
version = '0.1.0-SNAPSHOT'
description = 'Jenkins plugin for Build Clerk'

repositories {
    mavenCentral()
    maven {
        url('https://repo.jenkins-ci.org/public/')
    }
}

dependencies {
    implementation project(':model')
    implementation project(':rest')
    implementation group: 'org.jetbrains', name: 'annotations', version: '16.0.2'

    // step API
    implementation group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-step-api', version: '2.13'

    // other plugins
    jenkinsPlugins group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-step-api', version: '2.13'
    jenkinsPlugins group: 'org.jenkins-ci.plugins.workflow', name: 'workflow-cps', version: '2.42'

    // rest
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-jackson:$version_retrofit"
}

jenkinsPlugin {
    // version of Jenkins core this plugin depends on, must be 1.420 or later
    jenkinsVersion = '2.89.4'

    // ID of the plugin, defaults to the project name without trailing '-plugin'
    shortName = 'build-clerk'

    // human-readable name of plugin
    displayName = 'Build Clerk'

    // URL for plugin on Jenkins wiki or elsewhere
    url = 'https://github.com/release-tools/build-clerk'

    // plugin URL on GitHub, optional
    gitHubUrl = 'https://github.com/release-tools/build-clerk'

    // use the plugin class loader before the core class loader, defaults to false
    pluginFirstClassLoader = true

    // optional list of package prefixes that your plugin doesn't want to see from core
    maskClasses = 'groovy.grape org.apache.commons.codec'

    // set the directory from which the development server will run, defaults to 'work'
    workDir = file('/tmp/jenkins')

    // URL used to deploy the plugin, defaults to the value shown
    // the system property 'jpi.repoUrl' can be used to override this option
    repoUrl = 'https://repo.jenkins-ci.org/releases'

    // URL used to deploy snapshots of the plugin, defaults to the value shown
    // the system property 'jpi.snapshotRepoUrl' can be used to override this option
    snapshotRepoUrl = 'https://repo.jenkins-ci.org/snapshots'

    // enable injection of additional tests for checking the syntax of Jelly and other things
    disabledTestInjection = false

    // the output directory for the localizer task relative to the project root, defaults to the value shown
    localizerOutputDir = "${project.buildDir}/generated-src/localizer"

    // disable configuration of Maven Central, the local Maven cache and the Jenkins Maven repository, defaults to true
    configureRepositories = false

    // skip configuration of publications and repositories for the Maven Publishing plugin, defaults to true
    configurePublishing = false

    // plugin file extension, either 'jpi' or 'hpi', defaults to 'hpi'
    fileExtension = 'hpi'

    // the developers section is optional, and corresponds to the POM developers section
    developers {
        developer {
            id 'outofcoffee'
            name 'Pete Cornish'
            email 'outofcoffee@gmail.com'
        }
    }
}
